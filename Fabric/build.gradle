plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'fabric-loom' version '1.5-SNAPSHOT'
}
base {
    archivesName = "${mod_id}-fabric-${minecraft_version}"
}
repositories {
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.architectury.dev/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_mc_version}:${parchment_version}")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    dependencies {
        modImplementation "it.crystalnest:soul-fire-d-fabric:$minecraft_version-$soul_fire_d_version"
    }
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'

    
//    modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
//    modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-fabric-api:${jei_version}")

//    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${rei_version}"
//    modCompileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:${rei_version}"
//    modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${rei_version}"
//    modRuntimeOnly "dev.architectury:architectury-fabric:${architectury}"


    implementation project(":Common")

}

loom {
    if (project(":Common").file("src/main/resources/${mod_id}.accesswidener").exists()) {
        accessWidenerPath.set(project(":common").file("src/main/resources/${mod_id}.accesswidener"))
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    source(project(":Common").sourceSets.main.allSource)
}
tasks.withType(Javadoc).configureEach {
    source(project(":Common").sourceSets.main.allJava)
}
tasks.named("sourcesJar", Jar) {
    from(project(":Common").sourceSets.main.allSource)
}

processResources {
    from project(":Common").sourceSets.main.resources
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId base.archivesName.get()
            from components.java
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}